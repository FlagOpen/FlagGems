[pytest]
markers =
    # 二元操作标记（test_binary_pointwise_perf.py）
    add: Mark tests for addition operation.
    bitwise_and: Mark tests for bitwise AND operation.
    bitwise_or: Mark tests for bitwise OR operation.
    div: Mark tests for division operation.
    eq: Mark tests for equality comparison.
    ge: Mark tests for "greater than or equal" comparison.
    gt: Mark tests for "greater than" comparison.
    le: Mark tests for "less than or equal" comparison.
    lt: Mark tests for "less than" comparison.
    mul: Mark tests for multiplication operation.
    ne: Mark tests for inequality comparison.
    pow: Mark tests for power operation.
    sub: Mark tests for subtraction operation.
    rsub: Mark tests for right-subtraction operation.
    
    # BLAS 操作标记（test_blas_perf.py）
    addmm: Mark tests for matrix-matrix multiplication with addition.
    bmm: Mark tests for batch matrix multiplication.
    mm: Mark tests for matrix multiplication.
    mv: Mark tests for matrix-vector multiplication.
    outer: Mark tests for outer product.
    
    # 通用点操作标记（test_generic_pointwise_perf.py）
    triu: Mark tests for upper triangular matrix operations.
    
    # 归约操作标记（test_reduction_perf.py）
    all: Mark tests for all-reduction operation.
    amax: Mark tests for maximum reduction.
    argmax: Mark tests for argmax reduction.
    CrossEntropyLoss: Mark tests for cross-entropy loss computation.
    cumsum: Mark tests for cumulative sum.
    group_norm: Mark tests for group normalization.
    layernorm: Mark tests for layer normalization.
    log_softmax: Mark tests for log-softmax activation.
    max: Mark tests for max reduction.
    mean: Mark tests for mean reduction.
    min: Mark tests for min reduction.
    prod: Mark tests for product reduction.
    softmax: Mark tests for softmax activation.
    softmax_backward: Mark tests for softmax backward pass.
    sum: Mark tests for sum reduction.
    vector_norm: Mark tests for vector norm computation.
    softmax: Mark tests for softmax activation.
    
    # 张量构造标记（test_tensor_constructor_perf.py）
    ones: Mark tests for creating ones tensors.
    zeros: Mark tests for creating zeros tensors.
    full: Mark tests for creating full-value tensors.
    ones_like: Mark tests for creating ones-like tensors.
    zeros_like: Mark tests for creating zeros-like tensors.
    fill: Mark tests for filling tensor values.
    
    # 一元点操作标记（test_unary_pointwise_perf.py）
    abs: Mark tests for absolute value operation.
    bitwise_not: Mark tests for bitwise NOT operation.
    cos: Mark tests for cosine operation.
    dropout: Mark tests for dropout layers.
    native_dropout: Mark tests for native dropout implementation.
    gelu: Mark tests for GELU activation.
    isinf: Mark tests for checking infinite values.
    isnan: Mark tests for checking NaN values.
    neg: Mark tests for negation operation.
    reciprocal: Mark tests for reciprocal operation.
    relu: Mark tests for ReLU activation.
    rsqrt: Mark tests for reciprocal square root.
    sigmoid: Mark tests for sigmoid activation.
    sin: Mark tests for sine operation.
    tanh: Mark tests for tanh activation.
    silu: Mark tests for SiLU activation.
    exp: Mark tests for exponential operation.
