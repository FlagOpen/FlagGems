============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/fyf/FlagGems
configfile: pytest.ini
plugins: hypothesis-6.136.4
collected 79 items / 77 deselected / 2 selected

test_pointwise_dynamic.py prepare args
(tensor(-0.2970, device='cuda:0'), tensor(-0.9287, device='cuda:0'))
(StridedBuffer(shape=(1,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(1,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
codegen config
CodeGenConfig(max_tile_size=1024, max_grid_size=(65535, 65535, 65535), max_num_warps_per_cta=32, prefer_block_pointer=True, prefer_1d_tile=False)
prepare args
(tensor([1.1823, 1.3317], device='cuda:0'), tensor([ 0.5293, -1.8621], device='cuda:0'))
(StridedBuffer(shape=(2,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(2,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[-0.8132,  1.1786],
        [-0.7438, -0.1906]], device='cuda:0'), tensor([[ 0.4930, -1.2164],
        [ 0.9088, -0.1768]], device='cuda:0'))
(StridedBuffer(shape=(4,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(4,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[-1.8601, -0.4227],
         [ 1.3705, -1.0152]],

        [[ 0.4315, -1.4218],
         [ 1.0209, -0.2430]]], device='cuda:0'), tensor([[[ 1.4617,  0.6862],
         [-0.1194,  1.3785]],

        [[ 1.1918, -0.0827],
         [ 0.8230,  0.9496]]], device='cuda:0'))
(StridedBuffer(shape=(8,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(8,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[-0.3224,  1.3309],
          [ 0.6534,  1.0808]],

         [[ 1.0072, -1.1201],
          [ 0.6319,  0.4277]]],


        [[[ 1.9672,  0.6689],
          [-3.6808,  0.7714]],

         [[-1.7392,  0.3517],
          [ 0.9204,  0.1764]]]], device='cuda:0'), tensor([[[[-0.7463, -0.7569],
          [-0.8233, -0.6181]],

         [[ 0.6934, -0.0429],
          [-0.7358,  0.1099]]],


        [[[-0.1601, -0.0552],
          [-0.3414,  1.3781]],

         [[-0.2480, -0.6523],
          [-1.7379, -0.6234]]]], device='cuda:0'))
(StridedBuffer(shape=(16,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(16,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[ 0.2704, -1.0088],
           [-0.3647, -1.2222]],

          [[ 1.0919, -0.2680],
           [ 0.8758,  1.6583]]],


         [[[-0.5207,  0.2852],
           [-0.8225, -1.1796]],

          [[ 0.2731, -0.4979],
           [-0.9975,  0.6967]]]],



        [[[[-1.2260,  0.2383],
           [-0.2300, -0.1896]],

          [[ 0.3966,  1.9089],
           [ 1.2267,  1.0300]]],


         [[[-0.2939,  1.3133],
           [ 0.0414,  0.4334]],

          [[-0.3053,  0.8554],
           [ 0.6063,  0.1726]]]]], device='cuda:0'), tensor([[[[[-1.6378,  1.6238],
           [-0.5613,  1.1061]],

          [[-0.0363,  0.0104],
           [-0.3310,  0.0274]]],


         [[[ 0.8872, -1.0808],
           [ 0.5427,  0.2029]],

          [[-0.8999,  0.1127],
           [-0.1466,  0.4300]]]],



        [[[[ 0.2388, -0.4143],
           [-1.6903, -1.2033]],

          [[-1.6196,  0.6702],
           [-1.5508, -0.0859]]],


         [[[-0.8872, -1.0914],
           [ 0.4906,  0.9720]],

          [[ 1.5728,  0.7931],
           [-0.4117,  1.1539]]]]], device='cuda:0'))
(StridedBuffer(shape=(32,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(32,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[[-1.6717,  0.9015],
            [ 1.3460, -1.0790]],

           [[-0.6996,  0.1213],
            [-0.3573,  0.3552]]],


          [[[ 1.5661, -1.7230],
            [-1.7996,  0.4824]],

           [[-1.3555,  1.1841],
            [ 1.2727,  0.2422]]]],



         [[[[-2.1553, -0.5068],
            [-0.4852, -0.6205]],

           [[ 0.0753, -0.2457],
            [-0.8317, -0.3223]]],


          [[[-0.4561, -0.5499],
            [-0.3770, -0.5122]],

           [[ 0.0839,  1.1138],
            [-0.0291, -0.2110]]]]],




        [[[[[-0.0495,  0.0353],
            [ 0.3858,  0.7092]],

           [[ 1.0674, -0.0896],
            [ 0.4753,  1.6110]]],


          [[[-1.0610,  0.6949],
            [-0.0659,  0.1247]],

           [[ 0.9214, -1.1054],
            [-0.3938,  0.6080]]]],



         [[[[ 0.3110,  0.8723],
            [ 0.2618, -1.0005]],

           [[ 1.7426,  1.0750],
            [-0.0059, -1.2323]]],


          [[[ 1.0717, -1.3280],
            [ 0.1808, -0.4660]],

           [[-1.3863, -0.9706],
            [-0.1340, -0.6058]]]]]], device='cuda:0'), tensor([[[[[[ 1.2663, -1.5993],
            [ 0.3489, -0.2854]],

           [[-1.5415,  0.5565],
            [-0.1737, -0.9266]]],


          [[[ 0.1387,  0.0365],
            [ 0.0643,  0.8480]],

           [[-0.5534,  0.4295],
            [-1.1992, -0.8280]]]],



         [[[[ 1.1308,  0.6357],
            [ 0.0803, -0.7917]],

           [[-1.9792,  0.2240],
            [-0.1467, -0.3046]]],


          [[[ 1.8291, -1.0905],
            [ 0.6813, -0.6597]],

           [[-0.3329, -0.0720],
            [-0.7636,  0.6887]]]]],




        [[[[[ 1.5301, -0.6431],
            [-0.1242, -0.6108]],

           [[ 0.7454, -0.6965],
            [ 0.1111,  0.6575]]],


          [[[ 1.1191, -0.2867],
            [-1.1339,  1.3141]],

           [[-1.9876, -1.3804],
            [ 0.4192, -0.2563]]]],



         [[[[-0.6585,  1.5626],
            [ 1.1675, -2.2182]],

           [[ 0.9029,  0.1574],
            [-0.0679,  0.7056]]],


          [[[-0.1949, -0.1326],
            [-0.1437,  1.9092]],

           [[-0.9308,  1.6464],
            [-1.3118,  1.4294]]]]]], device='cuda:0'))
(StridedBuffer(shape=(64,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(64,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[[[ 2.0424e-01,  3.6634e+00],
             [-7.3341e-01, -1.2448e+00]],

            [[ 5.4542e-01,  3.5558e-01],
             [-5.4735e-01, -2.9916e-01]]],


           [[[ 1.1489e+00,  1.4721e+00],
             [-4.6577e-01,  8.1158e-01]],

            [[-1.1490e-01,  1.3631e+00],
             [ 7.9627e-01, -2.8227e-01]]]],



          [[[[ 6.9279e-02,  1.6411e-01],
             [ 2.9733e-01,  2.7890e+00]],

            [[ 1.6268e+00, -1.8650e-01],
             [ 7.6546e-01, -1.9230e+00]]],


           [[[-1.8418e+00,  6.2578e-01],
             [-2.1408e+00, -3.9034e-01]],

            [[-7.7308e-01,  2.7685e+00],
             [ 2.2738e-01,  7.9492e-01]]]]],




         [[[[[-2.0471e+00, -1.6379e-01],
             [-9.3400e-02, -1.0257e+00]],

            [[-2.8094e-01, -9.6701e-02],
             [ 1.0009e+00, -1.8583e+00]]],


           [[[ 1.7921e-01, -8.8393e-01],
             [ 1.5230e-01,  1.7851e+00]],

            [[-1.9208e-01, -9.8954e-01],
             [-8.1615e-01, -7.8057e-01]]]],



          [[[[ 1.3682e+00, -2.3161e+00],
             [-1.2802e+00, -1.7351e+00]],

            [[-2.0993e+00, -1.3359e+00],
             [ 2.1560e-01,  1.4425e+00]]],


           [[[-2.3548e-01,  7.7176e-02],
             [-4.9335e-01,  1.4003e+00]],

            [[ 5.7574e-01, -8.6277e-01],
             [-1.2609e+00,  1.7326e-01]]]]]],





        [[[[[[-8.1147e-01, -6.6557e-03],
             [ 5.9860e-01, -2.2498e+00]],

            [[ 1.6007e+00,  1.2472e+00],
             [ 3.9557e-01, -8.8763e-01]]],


           [[[ 6.4478e-01, -3.5087e-01],
             [-1.0402e+00,  1.1489e+00]],

            [[ 1.5770e+00, -5.5470e-01],
             [-1.9678e-01, -1.3599e-01]]]],



          [[[[ 4.2071e-01,  1.5784e+00],
             [ 7.4890e-01,  1.5878e-01]],

            [[-7.4601e-02, -2.6819e-01],
             [-1.3362e-02, -8.7745e-01]]],


           [[[ 5.4868e-01,  9.4958e-01],
             [-1.3364e+00, -1.1842e+00]],

            [[-4.5081e-01, -5.3200e-02],
             [ 5.6642e-01, -1.5040e-01]]]]],




         [[[[[ 1.5685e+00, -4.2357e-02],
             [ 2.0459e+00,  9.0893e-01]],

            [[-8.7294e-01, -1.2778e+00],
             [-9.9728e-02, -1.7435e+00]]],


           [[[-1.0093e+00,  1.3365e+00],
             [ 1.4186e+00,  1.0965e+00]],

            [[-7.9264e-01, -8.2843e-01],
             [-4.7937e-01,  1.1248e+00]]]],



          [[[[ 5.4494e-01, -3.1463e-01],
             [ 1.3364e+00,  4.9499e-01]],

            [[ 8.0316e-01,  5.9074e-01],
             [-8.1497e-01, -1.2023e-01]]],


           [[[ 4.8511e-01, -6.7446e-02],
             [ 5.5175e-01, -4.7541e-01]],

            [[ 2.1157e-01,  2.6811e-01],
             [-3.1363e-03, -1.0848e+00]]]]]]], device='cuda:0'), tensor([[[[[[[ 0.1743, -0.1971],
             [ 1.9595, -1.2222]],

            [[ 1.6432, -0.3672],
             [-0.2254,  0.8645]]],


           [[[-1.3769,  0.9489],
             [-0.5037, -0.6765]],

            [[ 1.4774, -0.6471],
             [ 0.5856, -0.3982]]]],



          [[[[-0.5755,  0.6125],
             [-1.0343, -0.6612]],

            [[-0.1660, -0.1347],
             [-0.2614,  2.0332]]],


           [[[ 0.5120,  1.7416],
             [-2.5207, -1.0132]],

            [[ 0.7363, -0.7231],
             [-0.5677, -0.0228]]]]],




         [[[[[-2.1274, -1.4172],
             [-0.5463,  0.5046]],

            [[-0.1216,  0.1479],
             [ 0.2131,  0.5524]]],


           [[[ 1.0420, -0.6186],
             [-0.2048,  0.0830]],

            [[ 0.4373, -1.0390],
             [ 0.8188,  1.5698]]]],



          [[[[-1.8029,  0.9458],
             [-1.1819,  0.6787]],

            [[ 0.4058,  0.7104],
             [ 0.4785,  0.1812]]],


           [[[-0.6681, -0.5415],
             [ 1.1918, -0.8995]],

            [[ 1.8353, -0.3662],
             [-0.4716, -0.0552]]]]]],





        [[[[[[-0.0369,  1.5682],
             [ 0.0950,  0.7663]],

            [[ 0.6449, -1.8643],
             [ 0.5386,  0.7891]]],


           [[[-0.4242, -0.1472],
             [-0.4784,  0.7631]],

            [[-0.0643, -0.6710],
             [-1.6131, -1.2870]]]],



          [[[[ 0.3732, -0.4229],
             [-2.1129,  1.5201]],

            [[ 0.4253, -1.9120],
             [-0.0107,  0.2316]]],


           [[[-1.0561, -0.9999],
             [ 0.1939, -1.3623]],

            [[ 0.5999,  0.6589],
             [ 1.4880, -0.6617]]]]],




         [[[[[ 0.6459, -1.4469],
             [-1.4411, -0.5453]],

            [[ 1.1159,  1.3651],
             [ 2.6172,  0.8242]]],


           [[[-0.4146, -4.0123],
             [ 0.2882, -0.5872]],

            [[-2.1117,  0.0071],
             [-0.1420, -1.7221]]]],



          [[[[ 0.6570,  2.1023],
             [ 0.0969, -0.2243]],

            [[-0.7129, -0.4179],
             [ 1.0163, -0.3797]]],


           [[[-0.4553, -1.4885],
             [-0.6644, -0.2643]],

            [[ 0.1670, -0.3915],
             [-0.5854, -0.0465]]]]]]], device='cuda:0'))
(StridedBuffer(shape=(128,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(128,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
.prepare args
(tensor(-0.4134, device='cuda:0'), tensor(-0.8861, device='cuda:0'))
(StridedBuffer(shape=(1,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(1,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
codegen config
CodeGenConfig(max_tile_size=1024, max_grid_size=(65535, 65535, 65535), max_num_warps_per_cta=32, prefer_block_pointer=False, prefer_1d_tile=False)
prepare args
(tensor([ 0.4362, -0.2752], device='cuda:0'), tensor([-0.5101,  0.0443], device='cuda:0'))
(StridedBuffer(shape=(2,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(2,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[ 0.3208, -1.7019],
        [-0.2168, -0.8074]], device='cuda:0'), tensor([[ 0.1845,  2.7074],
        [ 0.5607, -0.5639]], device='cuda:0'))
(StridedBuffer(shape=(4,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(4,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[ 0.4626,  3.0048],
         [ 0.1396, -0.0194]],

        [[-1.0254, -2.4699],
         [-0.0748,  0.6536]]], device='cuda:0'), tensor([[[ 0.6808, -0.3787],
         [-1.3052, -0.1843]],

        [[-0.8677, -0.0071],
         [ 0.0053,  0.3579]]], device='cuda:0'))
(StridedBuffer(shape=(8,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(8,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[-0.5866, -0.9811],
          [ 2.3893,  0.1781]],

         [[-1.0846,  0.5295],
          [-0.9425,  0.3646]]],


        [[[ 1.0202, -0.7207],
          [ 0.4135, -1.0128]],

         [[-1.2374, -1.4222],
          [-0.1221, -0.9303]]]], device='cuda:0'), tensor([[[[ 0.0718, -1.2530],
          [ 0.2905, -1.2469]],

         [[ 0.5271, -0.4675],
          [ 1.0905,  0.3822]]],


        [[[ 1.0471,  1.7749],
          [ 0.1588,  0.1025]],

         [[ 1.3431, -0.4345],
          [ 0.9363, -0.3985]]]], device='cuda:0'))
(StridedBuffer(shape=(16,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(16,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[-0.4167,  1.6186],
           [ 0.6353,  0.6347]],

          [[ 0.6815,  0.0033],
           [-1.1068, -1.8601]]],


         [[[-0.8668,  0.0528],
           [ 0.1634, -0.9488]],

          [[-1.1946, -0.6738],
           [-0.1948, -1.3550]]]],



        [[[[ 0.2253,  0.2737],
           [-0.1906, -0.1625]],

          [[ 1.1501, -2.2624],
           [-0.8433,  0.1347]]],


         [[[-1.3359, -0.3359],
           [ 0.0135, -0.2707]],

          [[ 0.5104,  0.3117],
           [-1.3617,  2.1708]]]]], device='cuda:0'), tensor([[[[[-0.3748,  1.8427],
           [-1.0176,  0.6997]],

          [[-0.0785,  0.5860],
           [-0.1548,  2.1246]]],


         [[[ 1.1961,  0.5185],
           [-0.1329,  0.5269]],

          [[ 1.8418,  0.2618],
           [ 1.0670,  0.0048]]]],



        [[[[-0.3343,  0.6220],
           [ 0.7129,  0.5356]],

          [[-3.0137, -0.9617],
           [-0.9842,  0.2289]]],


         [[[ 1.3555,  0.3382],
           [-0.5355, -1.6174]],

          [[-1.5904,  0.4780],
           [-0.4948,  1.9038]]]]], device='cuda:0'))
(StridedBuffer(shape=(32,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(32,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[[-0.5968,  1.2613],
            [ 1.0317, -0.5629]],

           [[ 0.1888, -0.3378],
            [ 0.7123, -0.5086]]],


          [[[-0.5209, -1.4746],
            [ 0.5645, -0.6823]],

           [[ 0.6070,  0.3448],
            [ 0.5543,  1.3481]]]],



         [[[[-0.5193, -0.5582],
            [-1.4659, -0.6427]],

           [[ 0.9501,  0.9771],
            [ 0.4604,  0.6087]]],


          [[[ 1.0890, -0.4698],
            [-0.2139,  0.3466]],

           [[ 0.8443,  0.1935],
            [-1.9194,  0.6502]]]]],




        [[[[[-0.7959,  0.6719],
            [-0.0453,  0.1200]],

           [[ 0.0031, -1.3698],
            [ 1.3819, -0.0564]]],


          [[[ 1.6223,  2.5625],
            [ 0.7277, -1.0128]],

           [[ 0.5218,  0.8861],
            [-0.1644,  1.8201]]]],



         [[[[-0.7792, -0.4471],
            [ 1.5924,  1.4347]],

           [[-0.4343, -0.5292],
            [ 0.2309,  0.0933]]],


          [[[-0.0781,  0.5380],
            [-0.3952,  0.1455]],

           [[-2.1586,  0.0138],
            [ 0.4798,  0.6924]]]]]], device='cuda:0'), tensor([[[[[[-2.3175,  0.2156],
            [-0.7388,  0.2079]],

           [[-1.0429, -2.5669],
            [-1.2059, -0.8969]]],


          [[[-0.3532,  0.1744],
            [-0.7268,  1.1393]],

           [[ 1.3921, -0.4389],
            [-1.0334,  1.1344]]]],



         [[[[-1.0301,  0.7112],
            [-0.2814, -1.8565]],

           [[-0.3059, -0.3104],
            [-0.1747, -1.5077]]],


          [[[-0.7768, -0.5173],
            [ 0.8804,  1.9415]],

           [[-0.9273, -1.3389],
            [ 0.0869,  0.3431]]]]],




        [[[[[ 0.2382, -0.6564],
            [ 0.0112,  0.5209]],

           [[-1.9071, -0.6068],
            [ 0.6979,  0.4808]]],


          [[[-1.4359,  0.3032],
            [ 0.9301, -0.2266]],

           [[ 1.3977, -1.7108],
            [-0.6738, -0.9103]]]],



         [[[[ 0.8537,  0.8330],
            [-1.3226,  0.6371]],

           [[ 0.0989,  1.9216],
            [-0.0214, -1.1547]]],


          [[[-0.7310, -0.4316],
            [-0.2408, -0.0127]],

           [[ 1.3543,  0.7188],
            [ 0.3211, -0.7355]]]]]], device='cuda:0'))
(StridedBuffer(shape=(64,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(64,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
prepare args
(tensor([[[[[[[-3.8181e-01, -3.5140e-01],
             [ 3.0736e+00, -1.1741e+00]],

            [[-2.3109e-01,  5.3014e-01],
             [-1.6435e-01,  9.9630e-03]]],


           [[[ 1.2646e+00, -7.9442e-03],
             [-2.9683e-01, -8.7684e-01]],

            [[-3.7105e-02, -3.4636e-01],
             [ 1.1675e+00, -5.9899e-01]]]],



          [[[[ 8.8007e-02, -7.8832e-01],
             [-1.8963e-01, -6.6822e-01]],

            [[ 2.5199e+00, -1.1756e-01],
             [-9.1058e-01, -7.4305e-01]]],


           [[[ 8.5866e-01, -1.8395e-01],
             [-9.6957e-01, -7.6585e-01]],

            [[ 9.0692e-01,  1.7178e-01],
             [ 8.9621e-01, -1.4574e-01]]]]],




         [[[[[-5.1221e-01,  1.7885e+00],
             [-5.4083e-01, -3.3127e-01]],

            [[ 5.6645e-01, -1.7224e+00],
             [-7.1040e-01,  4.3608e-01]]],


           [[[-7.6702e-01, -9.2200e-01],
             [-5.8096e-03, -7.2986e-01]],

            [[ 2.4741e-01,  1.1015e+00],
             [ 8.7678e-01,  4.4875e-01]]]],



          [[[[ 1.1284e+00,  2.1082e+00],
             [-1.0700e-01,  3.1007e-01]],

            [[-4.7766e-01, -4.2508e-01],
             [ 1.8567e-01, -9.1674e-01]]],


           [[[-6.4479e-01, -5.4386e-01],
             [-2.2923e-01, -4.6170e-01]],

            [[-3.3790e-01, -1.0072e+00],
             [ 2.4262e-01, -3.3350e-01]]]]]],





        [[[[[[-3.3302e-01, -8.5371e-01],
             [-2.6683e+00,  5.3133e-01]],

            [[ 7.0524e-01,  3.1367e-01],
             [-1.5984e-02,  2.4901e-01]]],


           [[[-1.8934e-01, -2.2555e+00],
             [ 7.7969e-01, -6.6572e-01]],

            [[ 2.2181e+00,  2.4506e-01],
             [ 1.0696e+00,  3.3704e-01]]]],



          [[[[-1.1058e-04,  2.4665e+00],
             [-5.5239e-02, -5.1851e-01]],

            [[ 2.1208e-02, -1.5241e+00],
             [ 5.0546e-01,  4.6546e-01]]],


           [[[ 6.8653e-01, -4.5201e-01],
             [ 1.8622e-01, -2.5306e-01]],

            [[ 1.3076e-01, -1.1173e+00],
             [ 1.2160e+00,  2.0257e+00]]]]],




         [[[[[-1.1573e+00, -4.6983e-01],
             [ 1.0154e+00, -2.7183e-01]],

            [[ 7.6097e-01,  8.3070e-02],
             [-5.6702e-01, -3.1605e-01]]],


           [[[-9.3585e-01, -1.2475e+00],
             [ 1.3100e+00,  2.1488e+00]],

            [[-1.9884e-01, -1.3029e+00],
             [-9.4814e-02,  7.2414e-01]]]],



          [[[[ 3.9301e-01,  1.0673e-01],
             [-6.4631e-01,  3.2812e-01]],

            [[-4.0081e-01, -6.2356e-01],
             [ 1.0353e+00, -9.1513e-01]]],


           [[[-7.5020e-01,  9.6213e-01],
             [ 2.4811e-01, -7.6768e-01]],

            [[ 9.8705e-01, -1.9507e-01],
             [ 2.6377e-01, -3.0627e+00]]]]]]], device='cuda:0'), tensor([[[[[[[ 2.4538, -0.8922],
             [ 1.3684, -0.5150]],

            [[ 1.3176,  0.5348],
             [-0.0852, -1.7798]]],


           [[[ 1.0275,  0.3459],
             [-2.3377, -0.9182]],

            [[-1.0226, -1.2612],
             [ 0.0259,  2.4485]]]],



          [[[[ 0.1809,  0.8438],
             [-0.4643,  0.8054]],

            [[ 0.3220, -2.4891],
             [ 1.0310, -0.0935]]],


           [[[ 1.4551, -0.5795],
             [-1.6939, -0.6869]],

            [[-0.2361, -1.3001],
             [ 0.7484, -0.7862]]]]],




         [[[[[-1.3405, -0.4824],
             [ 1.2345, -0.5692]],

            [[-2.6157,  0.8614],
             [-0.2938, -1.2741]]],


           [[[-1.3419,  0.1435],
             [ 0.7502, -1.0826]],

            [[ 0.7598,  0.4087],
             [ 0.8646, -0.5177]]]],



          [[[[-0.2879,  0.6889],
             [ 1.9037, -1.6276]],

            [[ 2.6030,  2.0182],
             [-0.3841, -0.7770]]],


           [[[ 0.4936,  0.5611],
             [ 0.8565,  0.3895]],

            [[-1.0566,  0.5147],
             [ 0.2500,  0.9725]]]]]],





        [[[[[[ 0.2410,  0.1544],
             [ 0.4306, -0.5967]],

            [[ 0.1601,  0.7948],
             [-1.5519, -0.0909]]],


           [[[ 2.1980,  0.4862],
             [ 0.4591,  1.7357]],

            [[ 0.8565,  1.6170],
             [ 0.6806, -1.7946]]]],



          [[[[-0.5146, -0.8587],
             [ 0.6568,  0.3039]],

            [[ 2.1688, -0.8730],
             [-0.0051,  1.6054]]],


           [[[-0.4713,  0.2377],
             [-0.0813, -1.3609]],

            [[ 1.7947, -0.5005],
             [ 1.0356,  0.4802]]]]],




         [[[[[ 1.7519,  0.4037],
             [-0.2573,  0.9032]],

            [[ 1.1248,  0.3404],
             [ 0.2109, -0.9327]]],


           [[[ 0.0837,  0.7593],
             [-1.2091,  2.3370]],

            [[ 0.5729, -1.5820],
             [ 1.5224,  1.8282]]]],



          [[[[ 0.4065, -0.9427],
             [-0.1904, -1.8901]],

            [[ 0.0204, -1.1088],
             [ 0.6798, -0.4446]]],


           [[[ 0.9965,  1.0413],
             [ 1.3706,  1.0881]],

            [[-0.3065, -0.5953],
             [ 1.7009,  1.1090]]]]]]], device='cuda:0'))
(StridedBuffer(shape=(128,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0), StridedBuffer(shape=(128,), strides=(1,), dtype=torch.float32, offset=0, device=cuda:0))
{}
.

=============================== warnings summary ===============================
../../.virtualenvs/flaggem/lib/python3.10/site-packages/triton/runtime/autotuner.py:108: 11 warnings
  /home/fyf/.virtualenvs/flaggem/lib/python3.10/site-packages/triton/runtime/autotuner.py:108: DeprecationWarning: warmup, rep, and use_cuda_graph parameters are deprecated. See https://github.com/triton-lang/triton/pull/4496 for details.
    warnings.warn(("warmup, rep, and use_cuda_graph parameters are deprecated. See "

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================ 2 passed, 77 deselected, 11 warnings in 0.98s =================
