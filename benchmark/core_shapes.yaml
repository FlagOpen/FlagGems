single_dim_shapes: &single_dim_shapes
  shapes:
    - [64]
    - [1024]
    - [2048]
    - [4096]
    - [65536]
  shape_desc: "M"

vdot:
  <<: *single_dim_shapes

randperm:
  <<: *single_dim_shapes

gelu backward:
  shapes:
    - [1048576] # 1024 * 1024
    - [64, 64]
    - [4096, 4096]
    - [64, 512, 512]
    - [256, 1024, 1024]

softmax backward:
  shapes:
    - [1048576] # 1024 * 1024
    - [64, 64]
    - [4096, 4096]
    - [64, 512, 512]
    - [256, 1024, 1024]

diag:
  shapes:
    - [64]
    - [1024]
    - [64, 64]
    - [256, 1024]
    - [1024, 1024]

quantile:
  shapes:
    - [1048576] # 1024 * 1024
    - [64, 64]
    - [4096, 256]
    - [64, 512, 128]
    - [20, 8, 10000]

BlasBenchmark:
  shapes:
    - [2, 384, 384, 384]
    - [2, 4096, 4096, 4096]
    - [16, 1024, 1024, 1024]
    - [16, 2048, 2048, 2048]
    - [16, 4096, 4096, 4096]
  shape_desc: "B, M, N, K"   # shapes are defined as (B, M, N, K)

MvAndOuterBenchmark:
  shapes:
    - [384, 384]
    - [1024, 1024]
    - [4096, 4096]
    - [8192, 8192]
    - [10240, 10240]  #from perf

# NORM shapes can be either 3D or 4D:
# - 3D shapes are represented as [batch_size, channels, hidden_size]
# - 4D shapes are represented as [batch_size, channels, height, width]
# The default number of groups (num_groups) for GroupNorm is set to channels // 2
NormBenchmark:
  shapes:
    - [4, 16, 64, 4]
    - [16, 16, 8, 48]
    - [16, 16, 8, 88]
    - [16, 16, 128]
    - [20, 6, 65536] # from perf
  shape_desc: "N, C, *"

TensorSelectBenchmark:
  shapes:
    - [64, 64]
    - [256, 256]
    - [1024, 1024]
    - [4096, 4096]
    - [1024, 65536]

EmbeddingBenchmark:
  shapes:
    - [4, 4]
    - [16, 16]
    - [128, 128]
    - [256, 256]
    - [1024, 1024]

# [N, C, H, W]
UpsampleBenchmark:
  shapes:
    - [1, 3, 512, 512]
    - [8, 16, 128, 128]
    - [2, 3, 1024, 1024]
    - [16, 16, 512, 512]
    - [16, 16, 1024, 1024]
  shape_desc: "N, C, H, W"

ConcatBenchmark:
  shapes:
    - [64, 64]
    - [256, 256]
    - [512, 512]
    - [512, 1024]
    - [512, 2048]
  shape_desc: "((B), M, N) * 3"

TensorRepeatBenchmark:
  shapes:
    - [64, 64]
    - [256, 256]
    - [512, 512]
    - [512, 1024]
    - [512, 2048]
  shape_desc: "(B), M, N"

GenericBenchmarkExcluse1D:
  shapes:
    - [64, 64]
    - [1024, 1024]
    - [4096, 4096]
    - [64, 512, 512]
    - [1024, 1024, 1024]

GenericBenchmarkExcluse3D:
  shapes:
    - [1048576] # 1024 * 1024
    - [1073741824] # 1024 * 1024 * 1024
    - [1024, 512]
    - [1024, 1024]
    - [4096, 4096]

# default 2d-only shapes
GenericBenchmark2DOnly:
  shapes:
    - [64, 64]
    - [256, 256]
    - [1024, 1024]
    - [4096, 4096]
    - [1024, 65536]

UnaryReductionBenchmark:
  shapes:
    - [1048576] # 1024 * 1024
    - [64, 64]
    - [4096, 4096]
    - [64, 512, 512]
    - [1024, 1024, 1024]

UnaryPointwiseBenchmark:
  shapes:
    - [1073741824] # 1024 * 1024 * 1024
    - [64, 64]
    - [4096, 4096]
    - [64, 512, 512]
    - [1024, 1024, 1024]
  shape_desc: "(B), M, N"

# the default shapes info
Benchmark:
  shapes:
    - [1073741824] # 1024 * 1024 * 1024
    - [64, 64]
    - [4096, 4096]
    - [64, 512, 512]
    - [1024, 1024, 1024]
# default conv shape for input and weight stride padding groups
# default Ni Ci Hi WI  Co Hk Wk stride padding groups
ConvBenchmark:
  shapes:
    - [32, 64, 128, 128, 32, 3, 3, 1, 1, 1]
    - [32, 64, 128, 128, 32, 3, 3, 1, 2, 1]
    - [104, 16, 32, 32, 32, 4, 4, 1, 0, 1]
    - [64, 32, 18, 18, 32, 5, 5, 2, 1, 1]
    - [64, 32, 210, 210, 64, 5, 5, 2, 1, 1]
    - [32, 64, 210, 210, 16, 5, 5, 2, 1, 1]
    - [16, 32, 12, 12, 24, 3, 3, 2, 1, 1]
    - [16, 32, 24, 24, 24, 3, 3, 1, 1, 2]
    - [16, 32, 24, 24, 24, 3, 3, 2, 2, 2]
    - [16, 32, 24, 24, 24, 3, 3, 1, 2, 2]

Conv3DBenchmark:
  shapes:
    - [32, 64, 64, 64, 64, 32, 3, 3, 3, 1, 1, 1]  # standard dimensions, common parameters
    - [32, 64, 64, 64, 64, 32, 3, 3, 3, 2, 1, 1]  # different strides
    - [16, 32, 24, 24, 24, 24, 3, 3, 3, 1, 1, 2]  # smaller input size
    - [64, 32, 18, 18, 18, 32, 5, 5, 5, 1, 2, 1]  # larger kernel size
    - [16, 32, 12, 12, 12, 24, 3, 3, 3, 1, 2, 1]  # smaller input, different padding

AttentionBenchmark:
  shapes:
    - [4, 32, 1024, 64]
    - [4, 32, 1024, 128]
    - [4, 32, 2048, 128]
    - [4, 32, 4096, 128]
    - [4, 32, 8192, 128]

KronBenchmark:
  shapes:
    - [16, 16]
    - [64, 64]
    - [128, 128]
    - [256, 256]
    - [4, 8, 16, 32]

IndexPutAccFalseBenchmark:
  shapes:
    - [[268435456], [[65536]], [65536]]
    - [[32, 32], [[8], [2, 8]], [8]]
    - [[1024, 1024], [[4, 64]], [1024]]
    - [[512, 512, 512], [[2, 128], [128], [128]], [128]]
    - [[512, 512, 512], [[2, 128]], [512]]

IndexPutAccTrueBenchmark:
  shapes:
    - [[268435456], [[65536]], [65536]]
    - [[32, 32], [[8], [8]], [8]]
    - [[1024, 1024], [[64], [64]], [64]]
    - [[512, 512, 512], [[128], [128], [128]], [128]]
    - [[512, 512, 512], [[2, 128], [2, 128], [2, 128]], [2, 128]]

glu:
  shapes:
    - [4, 8, 512, 128]
    - [4, 8, 1024, 128]
    - [4, 8, 2048, 128]
    - [4, 8, 3072, 128]
    - [4, 8, 4096, 128]

index:
  shapes:
    - [[268435456], [[65536]]]
    - [[32, 32], [[8], [2, 8]]]
    - [[1024, 1024], [[64], [64]]]
    - [[512, 512, 512], [[2, 128]]]
    - [[64, 64, 64], [[2, 8], [2, 8]]]

FlashMLABenchmark:
  shapes:
    - [1024]
    - [2048]
    - [4096]
    - [8192]
    - [16384]

RopeBenchmark:
  shapes:
    - [128]
    - [192]
    - [256]
    - [384]
    - [512]
